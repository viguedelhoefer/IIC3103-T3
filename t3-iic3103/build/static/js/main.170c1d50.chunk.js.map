{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","username","setUsername","message","setMessage","chatBubble","setChatBubble","vuelos","setVuelos","positions","setPositions","io","path","autoConnect","transports","socket","useEffect","connect","on","console","log","emit","data","forEach","flight","code","position","date","Date","toUTCString","messages","disconnect","colors","MyIcon","L","Icon","extend","options","className","iconUrl","iconSize","Grid","container","style","display","justifyContent","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","info","idx","Polyline","color","length","origin","destination","dashArray","Circle","radius","Popup","airline","Object","entries","key","value","Marker","marker_index","icon","Container","height","overflow","width","borderColor","borderStyle","name","type","placeholder","onChange","e","target","onClick","textAlign","TableContainer","component","Paper","Table","minWidth","aria-label","TableHead","TableRow","TableCell","align","TableBody","plane","seats","passengers","pass","age","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.170c1d50.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState, useEffect, Fragment} from 'react';\nimport io from 'socket.io-client';\nimport {MapContainer, TileLayer, Marker, Popup, Polyline, Circle} from 'react-leaflet';\nimport L from 'leaflet';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Container } from '@material-ui/core';\n\nfunction App() {\n\n  const [username, setUsername] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const [chatBubble, setChatBubble] = useState([])\n\n  const [vuelos, setVuelos] = useState([]);\n\n  const [positions, setPositions] = useState({});\n\n  const [socket] = useState(io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {\n    path: '/flights',\n    autoConnect: false,\n    transports: ['websocket']\n  }));\n\n  useEffect(() => {\n    socket.connect();\n    socket.on('connect', () => {\n      console.log('connected');\n      socket.emit('FLIGHTS');\n    });\n    socket.on('FLIGHTS', (data) => {\n      console.log(data);\n      setVuelos(data);\n      data.forEach((flight) => {\n        setPositions({...positions, [flight.code]:[[0,0]] })\n      });\n    });\n    socket.on('POSITION', (data) => {\n      setPositions((positions) => { return {...positions, [data.code]: [data.position] } })\n    });\n    socket.on('CHAT', (data) => {\n      console.log(data);\n      data.date = new Date(data.date);\n      data.date = data.date.toUTCString();\n      console.log(data.date);\n      setChatBubble((messages) => { return [...messages, data]});\n    });\n    return () => socket.disconnect(console.log('disconnected'));\n    // eslint-disable-next-line\n  }, [socket]);\n\n  const emitFlights = () => {\n    socket.emit('FLIGHTS');\n  }\n\n  const emitChat = () => {\n    socket.emit('CHAT', {name: username, message: message});\n  }\n\n  const colors = ['blue', 'red', 'purple', 'green'];\n  var Icono = L.Icon.extend({\n    options: {\n      className: \"asd\",\n      iconUrl: \"https://i0.wp.com/p7.hiclipart.com/preview/352/395/627/flight-frequent-flyer-program-travel-airline-mango-vector-silver-flying-plane-plane.jpg\",\n      iconSize: [50,50]\n    }\n  })\n  const MyIcon = new Icono();\n\n  return (\n    <div>\n      <Grid container>\n      <h1>Rutas en vivo</h1>\n      <div style={{display: \"flex\", justifyContent: \"center\", position: \"relative\"}}>\n        <div className=\"Map-class\">\n        <MapContainer center={[-33.4513, -70.6653]} zoom={5} scrollWheelZoom={false}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {vuelos.map((info, idx) => (\n            <Fragment>\n            <Polyline color={colors[idx % colors.length]} positions={[info.origin, info.destination]} dashArray={'5'}/>\n            <Circle color={colors[idx % colors.length]} center={info.origin} radius={20000}>\n              <Popup>\n                Aeropuerto de origen: {info.origin} <br />\n                Vuelo: {info.code} <br />\n                Aerolinea: {info.airline}\n              </Popup>\n            </Circle>\n            <Circle color={colors[idx % colors.length]} center={info.destination} radius={20000}>\n              <Popup>\n                Aeropuerto de destino: {info.destination} <br />\n                Vuelo: {info.code} <br />\n                Aerolinea: {info.airline}\n              </Popup>\n            </Circle>\n            </Fragment>\n          ))}\n          {Object.entries(positions).map(([key, value]) => (\n              <Marker position={value[0]} marker_index={key} icon={MyIcon}>\n                <Popup>\n                  Codigo: {key} <br />\n                  Coordenadas Actuales: {value[0][0]},{value[0][1]}\n                </Popup>\n              </Marker>\n            ))}\n        </MapContainer>\n        </div>\n        <Container>\n          <h3>Chat</h3>\n          <div style={{height:'350px',  overflow: \"scroll\", width: '500px'}}>\n            {chatBubble.map((info) => (\n              <div style={{borderColor: 'black', borderStyle: 'solid'}}>\n              <p>Fecha: {info.date}</p>\n              <p>Nombre: {info.name}</p>\n              <p>Mensaje: {info.message}</p>\n              </div>\n            ))}\n          </div>\n          <div style={{height: '100px'}}>\n          <input type=\"text\" placeholder=\"Username...\" value={username} \n          onChange={(e) => setUsername(e.target.value)} />\n          <input type=\"text\" placeholder=\"Message...\" value={message}\n          onChange={(e)=> setMessage(e.target.value)} />\n          <button onClick={emitChat}>Enviar Mensaje</button>\n          </div>\n        </Container>\n      </div>\n      <div style={{display: \"flex\", justifyContent: \"center\", position: \"relative\"}}>\n        <h3 style={{textAlign: \"center\"}}>Informacion de los vuelos</h3>\n        <button onClick={emitFlights}>Actualizar Informacion</button>\n      </div>\n      </Grid>\n      <TableContainer component={Paper}>\n      <Table style={{minWidth: 450}} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Aerolinea</TableCell>\n            <TableCell align=\"center\">Codigo&nbsp;Vuelo</TableCell>\n            <TableCell align=\"center\">Avion</TableCell>\n            <TableCell align=\"center\">Asientos</TableCell>\n            <TableCell align=\"center\">Coordenadas&nbsp;Inicio</TableCell>\n            <TableCell align=\"center\">Coordenadas&nbsp;Fin</TableCell>\n            <TableCell align=\"center\">Pasajeros</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {vuelos.map((info) => (\n            <TableRow>\n              <TableCell align=\"center\">{info.airline}</TableCell>\n              <TableCell align=\"center\">{info.code}</TableCell>\n              <TableCell align=\"center\">{info.plane}</TableCell>\n              <TableCell align=\"center\">{info.seats}</TableCell>\n              <TableCell align=\"center\">{info.origin[0]},{info.origin[1]}</TableCell>\n              <TableCell align=\"center\">{info.destination[0]},{info.destination[1]}</TableCell>\n              <TableCell align=\"center\">\n              {info.passengers.map((pass) => (\n                <p>Nombre: {pass.name} <br /> Edad: {pass.age}</p>\n              ))}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}